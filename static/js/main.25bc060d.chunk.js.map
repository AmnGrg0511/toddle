{"version":3,"sources":["App.js","index.js"],"names":["App","useState","active","setActive","base","setBase","focus","setFocus","title","depth","data","setData","lastRef","useRef","useEffect","current","treeify","tree","i","length","childs","slice","part","push","datafy","showFile","e","reader","FileReader","onload","text","target","result","JSON","parse","readAsText","files","d","p","j","onDragEnd","prev","temp","filter","el","newBase","style","width","margin","display","rows","defaultValue","fontSize","fontWeight","fontFamily","alignItems","color","resizable","onDragOver","height","backgroundColor","transition","map","draggable","onDragStart","opacity","IconButton","size","onClick","marginLeft","marginRight","ref","value","onChange","lines","split","newData","newNode","Button","variant","flex","element","document","createElement","textFile","Blob","stringify","href","URL","createObjectURL","download","body","appendChild","click","htmlFor","accept","id","multiple","type","component","ReactDOM","render","StrictMode","passedData","getElementById"],"mappings":"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","file":"static/js/main.25bc060d.chunk.js","sourcesContent":["import { Button, IconButton } from \"@mui/material\";\nimport { useState, useRef, useEffect } from \"react\";\nimport {\n  RiDragMove2Fill,\n  RiArrowRightLine,\n  RiArrowLeftLine,\n  RiDeleteBinLine,\n} from \"react-icons/ri\";\nimport {\n  MdOutlineFileUpload,\n  MdOutlineFileDownload,\n  MdOutlineAdd,\n} from \"react-icons/md\";\n\nfunction App() {\n  const [active, setActive] = useState(-1);\n  const [base, setBase] = useState(-2);\n  const [focus, setFocus] = useState(0);\n  const [data, setData] = useState([{ title: \"\", depth: 0 }]);\n  const lastRef = useRef(null);\n\n  useEffect(() => {\n    if (lastRef.current) lastRef.current.focus();\n  }, [focus]);\n\n  const treeify = (data, depth = 0) => {\n    const tree = [];\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].depth === depth) {\n        data[i].childs = treeify(data.slice(i, part(data, i)), depth + 1);\n        tree.push(data[i]);\n      }\n    }\n    return tree;\n  };\n\n  const datafy = (tree) => {\n    const data = [];\n    for (let i = 0; i < tree.length; i++) {\n      data.push({ title: tree[i].title, depth: tree[i].depth });\n      data.push(...datafy(tree[i].childs));\n    }\n    return data;\n  };\n\n  const showFile = async (e) => {\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      const text = e.target.result;\n      setData(datafy(JSON.parse(text)));\n    };\n    reader.readAsText(e.target.files[0]);\n  };\n\n  const part = (d, i) => {\n    if (i < 0) return;\n    let p = i + 1,\n      depth = d[i].depth;\n    for (let j = i + 1; j < d.length; j++) {\n      if (d[j].depth <= depth) break;\n      p = j + 1;\n    }\n    return p;\n  };\n\n  return (\n    <div\n      onDragEnd={() => {\n        if (active !== -1 && base !== -2)\n          setData((prev) => {\n            const p = part(data, active);\n            const temp = prev.slice(active, p);\n            prev = prev.filter((el, j) => j < active || j >= p);\n            let newBase = active <= base ? base + 1 - p + active : base + 1;\n            return [...prev.slice(0, newBase), ...temp, ...prev.slice(newBase)];\n          });\n        setBase(-2);\n        setActive(-1);\n      }}\n      style={{\n        width: \"80%\",\n        margin: \"50px auto\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n        }}\n      >\n        <textarea\n          rows=\"1\"\n          defaultValue=\"Title\"\n          style={{\n            fontSize: 30,\n            fontWeight: \"bold\",\n            fontFamily: \"Monospace\",\n            alignItems: \"center\",\n            color: \"#ccc\",\n            resizable: \"none\",\n          }}\n        />\n      </div>\n      <div\n        onDragOver={() => {\n          if (\n            data[active].depth - 1 <= 0 &&\n            (!data[0] || data[0].depth <= data[active].depth)\n          )\n            setBase(-1);\n        }}\n        style={{\n          width: \"100%\",\n          height: base === -1 ? 40 : 4,\n          backgroundColor: base === -1 ? \"#bde0f5\" : \"#eee\",\n          transition: \"all ease .2s\",\n        }}\n      />\n      {data.map(({ title, depth }, i) => (\n        <div>\n          <div\n            draggable\n            onDragStart={() => {\n              setActive(i);\n            }}\n            key={i}\n            style={{\n              display: \"flex\",\n              opacity: i >= active && i < part(data, active) ? 0.2 : 1,\n              alignItems: \"center\",\n            }}\n          >\n            <div>\n              <IconButton size=\"small\" onClick={() => { }}>\n                <RiDragMove2Fill />\n              </IconButton>\n              <IconButton size=\"small\"\n                onClick={() => {\n                  if (i !== 0 && depth > 0) {\n                    setData((prev) =>\n                      prev.map((e, j) =>\n                        j >= i && j < part(prev, i)\n                          ? { ...e, depth: e.depth - 1 }\n                          : e\n                      )\n                    );\n                  }\n                }}\n              >\n                <RiArrowLeftLine />\n              </IconButton>\n              <IconButton size=\"small\"\n                onClick={() => {\n                  if (i !== 0 && depth <= data[i - 1].depth) {\n                    setData((prev) =>\n                      prev.map((e, j) =>\n                        i === j ? { ...e, depth: e.depth + 1 } : e\n                      )\n                    );\n                  }\n                }}\n              >\n                <RiArrowRightLine />\n              </IconButton>\n              <IconButton size=\"small\"\n                onClick={() =>\n                  setData((prev) =>\n                    prev.filter((e, j) => j < i || j >= part(prev, i))\n                  )\n                }\n              >\n                <RiDeleteBinLine />\n              </IconButton>\n            </div>\n            <div\n              style={{\n                height: 56,\n                width: 28,\n                backgroundColor: \"#fafafa\",\n                marginLeft: 15 + depth * 14,\n                marginRight: 15,\n              }}\n            />\n            <textarea\n              rows=\"1\"\n              ref={i === focus ? lastRef : null}\n              value={title}\n              style={{\n                opacity: 1 - depth * 0.1,\n                fontSize: 1.75 - depth * .15625 + 'em',\n              }}\n              onChange={({ target: { value } }) => {\n                const lines = value.split(\"\\n\");\n                value = lines[0];\n                let newData = data.map((el, j) =>\n                  i === j ? { ...el, title: value } : el\n                );\n                if (lines.length > 1) {\n                  const newNode = { title: lines[1], depth: data[i].depth };\n                  newData = [\n                    ...newData.slice(0, i + 1),\n                    newNode,\n                    ...newData.slice(i + 1),\n                  ];\n                  setFocus(i + 1);\n                }\n                setData(newData);\n              }}\n            />\n          </div>\n          <div\n            onDragOver={() => {\n              if (\n                data[active].depth - 1 <= depth &&\n                (!data[i + 1] || data[i + 1].depth <= data[active].depth)\n              )\n                setBase(i);\n            }}\n            style={{\n              width: \"100%\",\n              height: base === i ? 40 : 4,\n              backgroundColor: base === i ? \"#bde0f5\" : \"#eee\",\n              transition: \"all ease .2s\",\n            }}\n          />\n        </div>\n      ))}\n      <div style={{ display: \"flex\" }}>\n        <Button\n          variant=\"contained\"\n          style={{ flex: 1, margin: 5 }}\n          onClick={() => {\n            setData((prev) => [\n              ...prev,\n              { title: \"\", depth: prev[prev.length - 1]?.depth ?? 0 },\n            ]);\n          }}\n        >\n          <MdOutlineAdd style={{ width: 40, height: 20 }} />\n          Add\n        </Button>\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <Button\n          style={{ flex: 1, margin: 5 }}\n          variant=\"outlined\"\n          onClick={() => {\n            const element = document.createElement(\"a\");\n            const textFile = new Blob([[JSON.stringify(treeify(data))]]);\n            element.href = URL.createObjectURL(textFile);\n            element.download = \"userFile.json\";\n            document.body.appendChild(element);\n            element.click();\n          }}\n        >\n          <MdOutlineFileDownload style={{ width: 40, height: 20 }} />\n          Save\n        </Button>\n        <label style={{ flex: 1, margin: 5 }} htmlFor=\"button-file\">\n          <input\n            style={{ display: \"none\" }}\n            accept=\"application/JSON\"\n            onChange={showFile}\n            id=\"button-file\"\n            multiple\n            type=\"file\"\n          />\n          <Button variant=\"outlined\" component=\"span\" style={{ width: \"100%\" }}>\n            <MdOutlineFileUpload style={{ width: 40, height: 20 }} />\n            Load\n          </Button>\n        </label>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App passedData={[{ title: \"\" }]} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
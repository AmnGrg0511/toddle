{"version":3,"sources":["App.js","index.js"],"names":["App","useState","focus","setFocus","title","depth","data","setData","lastRef","useRef","useEffect","current","treeify","tree","console","log","i","length","childs","slice","part","push","datafy","showFile","e","a","reader","FileReader","onload","text","target","result","JSON","parse","readAsText","files","d","p","j","style","width","margin","borderBottom","display","rows","defaultValue","fontSize","fontWeight","fontFamily","alignItems","color","resizable","map","draggable","onDragStart","IconButton","onClick","prev","el","filter","height","backgroundColor","marginLeft","marginRight","ref","value","opacity","onChange","lines","split","newData","newNode","Button","variant","flex","element","document","createElement","textFile","Blob","stringify","href","URL","createObjectURL","download","body","appendChild","click","htmlFor","accept","id","multiple","type","component","ReactDOM","render","StrictMode","passedData","getElementById"],"mappings":"kQA0OeA,MA5Nf,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACNC,EADM,KACCC,EADD,OAEWF,mBAAS,CAAC,CAAEG,MAAO,GAAIC,MAAO,KAFzC,mBAENC,EAFM,KAEAC,EAFA,KAGPC,EAAUC,iBAAO,MAEvBC,qBAAU,WACJF,EAAQG,SAASH,EAAQG,QAAQT,UACpC,CAACA,IAEJ,IAAMU,EAAU,SAAVA,EAAWN,GAAqB,IAAfD,EAAc,uDAAN,EACvBQ,EAAO,GACbC,QAAQC,IAAI,CAAET,OAAMO,OAAMR,UAC1B,IAAK,IAAIW,EAAI,EAAGA,EAAIV,EAAKW,OAAQD,IAC3BV,EAAKU,GAAGX,QAAUA,IACpBC,EAAKU,GAAGE,OAASN,EACfN,EAAKa,MAAMH,EAAGI,EAAKd,EAAMU,EAAGX,IAC5BA,EAAQ,GAEVQ,EAAKQ,KAAKf,EAAKU,KAGnB,OAAOH,GAGHS,EAAS,SAATA,EAAUT,GACd,IAAMP,EAAO,GACbQ,QAAQC,IAAI,CAAET,OAAMO,SACpB,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAKI,OAAQD,IAC/BV,EAAKe,KAAK,CAAEjB,MAAOS,EAAKG,GAAGZ,MAAOC,MAAOQ,EAAKG,GAAGX,QACjDC,EAAKe,KAAL,MAAAf,EAAI,YAASgB,EAAOT,EAAKG,GAAGE,UAE9B,OAAOZ,GAGHiB,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,uDACTC,EAAS,IAAIC,YACZC,OAAP,uCAAgB,WAAOJ,GAAP,eAAAC,EAAA,sDACRI,EAAOL,EAAEM,OAAOC,OACtBxB,EAAQe,EAAOU,KAAKC,MAAMJ,KAFZ,2CAAhB,sDAIAH,EAAOQ,WAAWV,EAAEM,OAAOK,MAAM,IANlB,2CAAH,sDASRf,EAAO,SAACgB,EAAGpB,EAAGX,GAElB,IADA,IAAIgC,EAAIrB,EAAI,EACHsB,EAAItB,EAAI,EAAGsB,EAAIF,EAAEnB,UACpBmB,EAAEE,GAAGjC,OAASA,GADciC,IAEhCD,EAAIC,EAAI,EAEV,OAAOD,GAGT,OACE,sBACEE,MAAO,CACLC,MAAO,MACPC,OAAQ,aAHZ,UAME,qBACEF,MAAO,CACLG,aAAc,iBACdC,QAAS,QAHb,SAME,0BACEC,KAAK,IACLC,aAAc,cACdN,MAAO,CACLO,SAAU,GACVC,WAAY,OACZC,WAAY,YACZC,WAAY,SACZC,MAAO,OACPC,UAAW,YAIhB7C,EAAK8C,KAAI,WAAmBpC,GAAnB,IAAGZ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACR,sBACEgD,WAAS,EACTC,YAAa,WACXxC,QAAQC,IAAI,OAGdwB,MAAO,CACLI,QAAS,OACTM,WAAY,SACZP,aAAc,kBATlB,UAYE,gCACE,cAACa,EAAA,EAAD,CAAYC,QAAS,aAArB,SACE,cAAC,IAAD,MAEF,cAACD,EAAA,EAAD,CACEC,QAAS,WACG,IAANxC,GAAWX,EAAQ,GACrBE,GAAQ,SAACkD,GAAD,OACNA,EAAKL,KAAI,SAAC5B,EAAGc,GAAJ,OACPA,GAAKtB,GAAKsB,EAAIlB,EAAKqC,EAAMzC,EAAGX,GAA5B,2BACSmB,GADT,IACYnB,MAAOmB,EAAEnB,MAAQ,IACzBmB,SAPd,SAaE,cAAC,IAAD,MAEF,cAAC+B,EAAA,EAAD,CACEC,QAAS,WACG,IAANxC,GAAWX,GAASC,EAAKU,EAAI,GAAGX,OAClCE,GAAQ,SAACkD,GAAD,OACNA,EAAKL,KAAI,SAACM,EAAIpB,GAAL,OACPtB,IAAMsB,EAAN,2BAAeoB,GAAf,IAAmBrD,MAAOqD,EAAGrD,MAAQ,IAAMqD,SALrD,SAWE,cAAC,IAAD,MAEF,cAACH,EAAA,EAAD,CACEC,QAAS,kBACPjD,GAAQ,SAACkD,GAAD,OACNA,EAAKE,QAAO,SAACnC,EAAGc,GAAJ,OAAUA,EAAItB,GAAKsB,GAAKlB,EAAKqC,EAAMzC,EAAGX,UAHxD,SAOE,cAAC,IAAD,SAGJ,qBACEkC,MAAO,CACLqB,OAAQ,GACRpB,MAAO,GACPqB,gBAAiB,UACjBC,WAAY,GAAa,GAARzD,EACjB0D,YAAa,MAGjB,0BACEnB,KAAK,IACLoB,IAAKhD,IAAMd,EAAQM,EAAU,KAC7ByD,MAAO7D,EACPmC,MAAO,CACL2B,QAAS,EAAY,GAAR7D,EACbyC,SAAU,GAAa,IAARzC,GAEjB8D,SAAU,YAA4B,IAAfF,EAAc,EAAxBnC,OAAUmC,MACfG,EAAQH,EAAMI,MAAM,MAC1BJ,EAAQG,EAAM,GACd,IAAIE,EAAUhE,EAAK8C,KAAI,SAACM,EAAIpB,GAAL,OACrBtB,IAAMsB,EAAN,2BAAeoB,GAAf,IAAmBtD,MAAO6D,IAAUP,KAEtC,GAAIU,EAAMnD,OAAS,EAAG,CACpB,IAAMsD,EAAU,CAAEnE,MAAOgE,EAAM,GAAI/D,MAAOC,EAAKU,GAAGX,OAClDiE,EAAO,sBACFA,EAAQnD,MAAM,EAAGH,EAAI,IADnB,CAELuD,GAFK,YAGFD,EAAQnD,MAAMH,EAAI,KAEvBb,EAASa,EAAI,GAEfT,EAAQ+D,QAjFPtD,MAsFT,qBAAKuB,MAAO,CAAEI,QAAS,QAAvB,SACE,eAAC6B,EAAA,EAAD,CACEC,QAAQ,YACRlC,MAAO,CAAEmC,KAAM,EAAGjC,OAAQ,GAC1Be,QAAS,WACPjD,GAAQ,SAACkD,GAAD,kCACHA,GADG,CAEN,CAAErD,MAAO,GAAIC,MAAK,UAAEoD,EAAKA,EAAKxC,OAAS,GAAGZ,aAAxB,QAAiC,SANzD,UAUE,cAAC,IAAD,CAAckC,MAAO,CAAEC,MAAO,GAAIoB,OAAQ,MAV5C,WAcF,sBAAKrB,MAAO,CAAEI,QAAS,QAAvB,UACE,eAAC6B,EAAA,EAAD,CACEjC,MAAO,CAAEmC,KAAM,EAAGjC,OAAQ,GAC1BgC,QAAQ,WACRjB,QAAS,WACP,IAAMmB,EAAUC,SAASC,cAAc,KACjCC,EAAW,IAAIC,KAAK,CAAC,CAAC/C,KAAKgD,UAAUpE,EAAQN,OACnDqE,EAAQM,KAAOC,IAAIC,gBAAgBL,GACnCH,EAAQS,SAAW,gBACnBR,SAASS,KAAKC,YAAYX,GAC1BA,EAAQY,SATZ,UAYE,cAAC,IAAD,CAAuBhD,MAAO,CAAEC,MAAO,GAAIoB,OAAQ,MAZrD,UAeA,wBAAOrB,MAAO,CAAEmC,KAAM,EAAGjC,OAAQ,GAAK+C,QAAQ,cAA9C,UACE,uBACEjD,MAAO,CAAEI,QAAS,QAClB8C,OAAO,mBACPtB,SAAU5C,EACVmE,GAAG,cACHC,UAAQ,EACRC,KAAK,SAEP,eAACpB,EAAA,EAAD,CAAQC,QAAQ,WAAWoB,UAAU,OAAOtD,MAAO,CAAEC,MAAO,QAA5D,UACE,cAAC,IAAD,CAAqBD,MAAO,CAAEC,MAAO,GAAIoB,OAAQ,MADnD,oBC3NVkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKC,WAAY,CAAC,CAAE7F,MAAO,SAE7BwE,SAASsB,eAAe,W","file":"static/js/main.362b94a2.chunk.js","sourcesContent":["import { Button, IconButton } from \"@mui/material\";\nimport { useState, useRef, useEffect } from \"react\";\nimport {\n  RiDragMove2Fill,\n  RiArrowRightLine,\n  RiArrowLeftLine,\n  RiDeleteBinLine,\n} from \"react-icons/ri\";\nimport {\n  MdOutlineFileUpload,\n  MdOutlineFileDownload,\n  MdOutlineAdd,\n} from \"react-icons/md\";\n\nfunction App() {\n  const [focus, setFocus] = useState(0);\n  const [data, setData] = useState([{ title: \"\", depth: 0 }]);\n  const lastRef = useRef(null);\n\n  useEffect(() => {\n    if (lastRef.current) lastRef.current.focus();\n  }, [focus]);\n\n  const treeify = (data, depth = 0) => {\n    const tree = [];\n    console.log({ data, tree, depth });\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].depth === depth) {\n        data[i].childs = treeify(\n          data.slice(i, part(data, i, depth)),\n          depth + 1\n        );\n        tree.push(data[i]);\n      }\n    }\n    return tree;\n  };\n\n  const datafy = (tree) => {\n    const data = [];\n    console.log({ data, tree });\n    for (let i = 0; i < tree.length; i++) {\n      data.push({ title: tree[i].title, depth: tree[i].depth });\n      data.push(...datafy(tree[i].childs));\n    }\n    return data;\n  };\n\n  const showFile = async (e) => {\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      const text = e.target.result;\n      setData(datafy(JSON.parse(text)));\n    };\n    reader.readAsText(e.target.files[0]);\n  };\n\n  const part = (d, i, depth) => {\n    let p = i + 1;\n    for (let j = i + 1; j < d.length; j++) {\n      if (d[j].depth <= depth) break;\n      p = j + 1;\n    }\n    return p;\n  };\n\n  return (\n    <div\n      style={{\n        width: \"80%\",\n        margin: \"50px auto\",\n      }}\n    >\n      <div\n        style={{\n          borderBottom: \"2px solid #eee\",\n          display: \"flex\",\n        }}\n      >\n        <textarea\n          rows=\"1\"\n          defaultValue={\"Mathematics\"}\n          style={{\n            fontSize: 30,\n            fontWeight: \"bold\",\n            fontFamily: \"Monospace\",\n            alignItems: \"center\",\n            color: \"#ccc\",\n            resizable: \"none\",\n          }}\n        />\n      </div>\n      {data.map(({ title, depth }, i) => (\n        <div\n          draggable\n          onDragStart={() => {\n            console.log(\"hi\");\n          }}\n          key={i}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            borderBottom: \"2px solid #eee\",\n          }}\n        >\n          <div>\n            <IconButton onClick={() => {}}>\n              <RiDragMove2Fill />\n            </IconButton>\n            <IconButton\n              onClick={() => {\n                if (i !== 0 && depth > 0) {\n                  setData((prev) =>\n                    prev.map((e, j) =>\n                      j >= i && j < part(prev, i, depth)\n                        ? { ...e, depth: e.depth - 1 }\n                        : e\n                    )\n                  );\n                }\n              }}\n            >\n              <RiArrowLeftLine />\n            </IconButton>\n            <IconButton\n              onClick={() => {\n                if (i !== 0 && depth <= data[i - 1].depth) {\n                  setData((prev) =>\n                    prev.map((el, j) =>\n                      i === j ? { ...el, depth: el.depth + 1 } : el\n                    )\n                  );\n                }\n              }}\n            >\n              <RiArrowRightLine />\n            </IconButton>\n            <IconButton\n              onClick={() =>\n                setData((prev) =>\n                  prev.filter((e, j) => j < i || j >= part(prev, i, depth))\n                )\n              }\n            >\n              <RiDeleteBinLine />\n            </IconButton>\n          </div>\n          <div\n            style={{\n              height: 56,\n              width: 40,\n              backgroundColor: \"#fafafa\",\n              marginLeft: 15 + depth * 18,\n              marginRight: 15,\n            }}\n          />\n          <textarea\n            rows=\"1\"\n            ref={i === focus ? lastRef : null}\n            value={title}\n            style={{\n              opacity: 1 - depth * 0.1,\n              fontSize: 26 - depth * 2.5,\n            }}\n            onChange={({ target: { value } }) => {\n              const lines = value.split(\"\\n\");\n              value = lines[0];\n              let newData = data.map((el, j) =>\n                i === j ? { ...el, title: value } : el\n              );\n              if (lines.length > 1) {\n                const newNode = { title: lines[1], depth: data[i].depth };\n                newData = [\n                  ...newData.slice(0, i + 1),\n                  newNode,\n                  ...newData.slice(i + 1),\n                ];\n                setFocus(i + 1);\n              }\n              setData(newData);\n            }}\n          />\n        </div>\n      ))}\n      <div style={{ display: \"flex\" }}>\n        <Button\n          variant=\"contained\"\n          style={{ flex: 1, margin: 5 }}\n          onClick={() => {\n            setData((prev) => [\n              ...prev,\n              { title: \"\", depth: prev[prev.length - 1].depth ?? 0 },\n            ]);\n          }}\n        >\n          <MdOutlineAdd style={{ width: 40, height: 20 }} />\n          Add\n        </Button>\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <Button\n          style={{ flex: 1, margin: 5 }}\n          variant=\"outlined\"\n          onClick={() => {\n            const element = document.createElement(\"a\");\n            const textFile = new Blob([[JSON.stringify(treeify(data))]]);\n            element.href = URL.createObjectURL(textFile);\n            element.download = \"userFile.json\";\n            document.body.appendChild(element);\n            element.click();\n          }}\n        >\n          <MdOutlineFileDownload style={{ width: 40, height: 20 }} />\n          Save\n        </Button>\n        <label style={{ flex: 1, margin: 5 }} htmlFor=\"button-file\">\n          <input\n            style={{ display: \"none\" }}\n            accept=\"application/JSON\"\n            onChange={showFile}\n            id=\"button-file\"\n            multiple\n            type=\"file\"\n          />\n          <Button variant=\"outlined\" component=\"span\" style={{ width: \"100%\" }}>\n            <MdOutlineFileUpload style={{ width: 40, height: 20 }} />\n            Load\n          </Button>\n        </label>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App passedData={[{ title: \"\" }]} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}